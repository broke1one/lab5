import sqlite3
import telebot
from telebot import types


api = "6693379477:AAEDzGhFjv3Ixedwd_HgpUpKtPJtkHw0qRA"
bot = telebot.TeleBot(api)


@bot.message_handler(commands=['start'])
def start(message):

    print("Received start command")
    markup = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥')
    markup.row(button_1)
    bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}! –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è, –≤ –∫–∞–∫–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–æ—Ç–∞—Ç—å –≤–∞—à –¥–æ—Å—É–≥ –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π", reply_markup=markup)
    bot.register_next_step_handler(message, choice_city)


def choice_city(message):

    print(f"Received message: {message.text}")
    if message.text == '–í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥':
        markup = types.InlineKeyboardMarkup()
        button_1 = types.InlineKeyboardButton("–ú–∏–Ω—Å–∫", callback_data="Minsk")
        button_2 = types.InlineKeyboardButton("–ë—Ä–µ—Å—Ç", callback_data="Brest")
        button_3 = types.InlineKeyboardButton("–ì—Ä–æ–¥–Ω–æ", callback_data="Grodno")
        button_4 = types.InlineKeyboardButton("–ì–æ–º–µ–ª—å", callback_data="Gomel")
        button_5 = types.InlineKeyboardButton("–ú–æ–≥–∏–ª–µ–≤", callback_data="Mogilev")
        button_6 = types.InlineKeyboardButton("–í–∏—Ç–µ–±—Å–∫", callback_data="Vitebsk")
       
        markup.row(button_1, button_2)
        markup.row(button_3, button_4)
        markup.row(button_5, button_6)

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è: ", reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: callback.data in ['Minsk', 'Brest', 'Grodno', 'Gomel', 'Mogilev', 'Vitebsk'])
def information_from_db(callback):

    print(f"Received callback query: {callback.data}")
    location = callback.data

    with sqlite3.connect("database.db") as con:
        cursor = con.cursor()
        sql_query_2 = "SELECT * FROM institution WHERE location = ?"
        cursor.execute(sql_query_2, (location,))
        results = cursor.fetchall()

        markup = types.InlineKeyboardMarkup()
        for row in results:
            button = types.InlineKeyboardButton(row[1], callback_data=str(row[0]))
            markup.add(button)

        button = types.InlineKeyboardButton("üîô", callback_data="back")
        markup.add(button)
        bot.send_message(callback.message.chat.id, "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É:", reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: callback.data.isdigit())
def show_info(callback):

    institution_id = callback.data
    print(institution_id)

    with sqlite3.connect("database.db") as con:
        cursor = con.cursor()
        sql_query = "SELECT * FROM institution WHERE id = ?"
        cursor.execute(sql_query, (int(institution_id),))
        result = cursor.fetchone()

        markup = types.InlineKeyboardMarkup()  
        button = types.InlineKeyboardButton("üîô", callback_data="back")
        markup.add(button)

        if result:
            info_message = f"–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è: {result[1]}\n\n–ê–¥—Ä–µ—Å:{result[4]}\n   \n–û–ø–∏—Å–∞–Ω–∏–µ: {result[5]}"
            bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=info_message, reply_markup=markup)
        else:
            bot.send_message(callback.message.chat.id, "–ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: callback.data == "back")
def back_to_menu(callback):

    bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    choice_city(callback.message)


bot.infinity_polling()